<?php
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

// Add your custom theme override functions here.
/**
 * Implements hook_preprocess_block()
 */
function ucr_cnas_1_preprocess_block(&$variables)
{
    $facebook = "menow";
}

function ucr_cnas_1_template_preprocess(&$variables, $hook, $info)
{
    $variables['facebook'] = "hello";
    $facebook = "menow";
}

/**
 * Implements template_preprocess_field().
 */
function ucr_cnas_1_preprocess_field(&$variables)
{
    if ($variables['field_name'] == "field_galleria_images") {
        foreach ($variables['items'] as $key => $item) {
            $fid = $item['content']['#item']->target_id; //The file ID
            $file = \Drupal\file\Entity\File::load($fid);
            $path = $file->getFileUri();
            $variables['items'][$key]['thumbnail'] = ImageStyle::load('gallery_thumbnail_131x131_')->buildUrl($path);
            $variables['items'][$key]['full'] = file_create_url($path);
        }
    }
}

/**
 * Implements template_preprocess_html().
 *
 * Adds additional classes
 */
function ucr_cnas_1_preprocess_html(&$variables)
{
    $variables['facebook'] = "hello";
    $facebook = "menow";
}

/**
 * Implements template_preprocess_node
 *
 * Add template suggestions and classes
 */
function ucr_cnas_1_preprocess_node(&$variables)
{

}

/**
 * Implements template_preprocess_page
 *
 * Add convenience variables and template suggestions
 */
function ucr_cnas_1_preprocess_page(&$variables)
{

    $header_image = theme_get_setting('header_bg_path', 'ucr_cnas_1');
    $footer_image = theme_get_setting('footer_bg_path', 'ucr_cnas_1');

    if (count($header_image) > 0) {
        $file = File::load($header_image[0]);
        $url = file_create_url($file->getFileUri());
        $header_style = "background-image:url($url); background-repeat: no-repeat; background-size: cover;";
        $variables['header_style'] = $header_style;
    }
    if (count($footer_image) > 0) {
        $file = File::load($footer_image[0]);
        $url = file_create_url($file->getFileUri());
        $footer_style = "background-image:url($url); background-repeat: no-repeat; background-size: cover;";
        $variables['footer_style'] = $footer_style;
    }

}

/**
 * Implements template_preprocess_views_view().
 */
function ucr_cnas_1_preprocess_views_view(&$variables)
{
    //load block field for vertical tabs into views template
    if ($variables['id'] == "accordion" and isset($variables['view_array']['#arguments'][0]) and $variables['view_array']['#arguments'][0] > 0) {
        $bid = $variables['view_array']['#arguments'][0];
        $block = \Drupal\block_content\Entity\BlockContent::load($bid);
        $val = $block->field_options->getValue();
        $variables['accordion_option'] = '';
        if (isset($val[0]['value']) and $val[0]['value'] == "multi-expand") {
            $variables['accordion_option'] = 'data-multi-expand="true"';
        } else if (isset($val[0]['value']) and $val[0]['value'] == "closed") {
            $variables['accordion_option'] = 'data-allow-all-closed="true"';
        } else if (isset($val[0]['value']) and $val[0]['value'] == "disabled") {
            $variables['accordion_option'] = 'disabled';
        }
    }
    //load block field for accordion options into views template
    if ($variables['id'] == "horizontal_tabs" and isset($variables['view_array']['#arguments'][0]) and $variables['view_array']['#arguments'][0] > 0) {
        $bid = $variables['view_array']['#arguments'][0];
        $block = \Drupal\block_content\Entity\BlockContent::load($bid);
        $val = $block->field_vertical_tab_option->getValue();
        if (isset($val[0]['value']) and $val[0]['value'] == 1) {
            $variables['vertical_tab'] = true;

        } else {
            $variables['vertical_tab'] = false;
        }
    }
    if ($variables['id'] == "galleria" and isset($variables['view_array']['#arguments'][0]) and $variables['view_array']['#arguments'][0] > 0) {
        $bid = $variables['view_array']['#arguments'][0];
        $block = \Drupal::entityTypeManager()->getStorage('block_content')->load($bid);
        $block_content = \Drupal::entityTypeManager()->getViewBuilder('block_content')->view($block);
        $variables['gallery_block'] = $block_content;
    }
}

/**
 * Implements template_preprocess_views_view_field().
 */
function ucr_cnas_1_preprocess_views_view_field(&$variables)
{
    $view_name = $variables['view']->id();
    $field_name = $variables['field']->realField;

    // Only do the following on the personnel profile view.
    if ($view_name == "personnel_profile") {
        // If the field is the profession / job titles, process the length.
        if ($field_name == 'field_profession_titles_value') {
            $field_value = trim($variables['field']->getValue($variables['row']));
            $explode = explode(PHP_EOL, $field_value);
            $field_value = implode(', ', $explode);

            $field_value = (strlen($field_value) > 45 ? substr($field_value, 0, 42) . "..." : $field_value);

            $variables['output'] = $field_value;
        }

        // If the field is the Taxonomy field (Dept / Programs), process the length.
        if ($field_name == "field_departments_programs_target_id") {
            $field_value = html_entity_decode(trim($variables['field']->advancedRender($variables['row'])));
            $field_value = (strlen($field_value) > 45 ? substr($field_value, 0, 42) . "..." : $field_value);

            $variables['output'] = $field_value;
        }
    }

    if ($view_name == "horizontal_tabs") {
        if ($field_name == 'field_tab_title_value') {
            $row_id = $variables['row']->paragraphs_item_field_data_block_content__field_tabs_id;
            $field_value = trim($variables['field']->getValue($variables['row']));
            $path = '#panel' . $row_id; // prefixed with /
            $url = Url::fromUri('internal:' . $path);
            $link = Link::fromTextAndUrl($field_value, $url);
            $link = $link->toRenderable();
            $output = render($link);
            $variables['output'] = $output;
        }
    }
}

function ucr_cnas_1_preprocess_paragraph__carousel_slider(&$variables)
{
    $paragraph = $variables['paragraph'];
    $is_video = ($paragraph->field_media->isEmpty() ? false : true);
    $variables['is_video_slide'] = $is_video;
}

function ucr_cnas_1_preprocess_region__header_top(&$variables)
{

    $config = \Drupal::config('ucr_global.settings');

    $variables['facebook'] = $config->get('facebook_url');
    $variables['facebook_title'] = $config->get('facebook_title');
    $variables['twitter'] = $config->get('twitter_url');
    $variables['twitter_title'] = $config->get('twitter_title');
    $variables['instagram'] = $config->get('instagram_url');
    $variables['instagram_title'] = $config->get('instagram_title');
    $variables['linkedin'] = $config->get('linkedin_url');
    $variables['linkedin_title'] = $config->get('linkedin_title');
    $variables['flickr'] = $config->get('flickr_url');
    $variables['flickr_title'] = $config->get('flickr_title');
    $variables['rss'] = $config->get('rss_url');
    $variables['rss_title'] = $config->get('rss_title');
    $variables['youtube'] = $config->get('youtube_url');
    $variables['youtube_title'] = $config->get('youtube_title');
    $variables['reddit'] = $config->get('reddit_url');
    $variables['reddit_title'] = $config->get('reddit_title');
    $variables['discord'] = $config->get('discord_url');
    $variables['discord_title'] = $config->get('discord_title');
    $variables['tiktok'] = $config->get('tiktok_url');
    $variables['tiktok_title'] = $config->get('tiktok_title');

}

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function ucr_cnas_1_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state)
{
    //From Citrus Studios
    $current_user = \Drupal::currentUser();
    $roles = $current_user->getRoles();

    if (in_array('site_builders', $roles) || in_array('administrator', $roles)) {

        $form['ucr_cnas_1_settings']['backgrounds'] = array(
            '#type' => 'details',
            '#title' => t('Backgrounds'),
            '#open' => FALSE,
        );

        $form['ucr_cnas_1_settings']['backgrounds']['header_bg_path'] = array(
            '#type' => 'managed_file',
            '#upload_location' => 'public://theme-banners/',
            '#upload_validators' => array(
                'file_validate_extensions' => array('gif png jpg jpeg svg'),
            ),
            '#title' => t('Header'),
            '#default_value' => theme_get_setting('header_bg_path', 'ucr_cnas_1'),
        );

        $form['ucr_cnas_1_settings']['backgrounds']['footer_bg_path'] = array(
            '#type' => 'managed_file',
            '#upload_location' => 'public://theme-banners/',
            '#upload_validators' => array(
                'file_validate_extensions' => array('gif png jpg jpeg svg'),
            ),
            '#title' => t('Footer') . $image[0],
            '#default_value' => theme_get_setting('footer_bg_path', 'ucr_cnas_1'),
        );

        // Make the uploaded images permanent.
        $image = theme_get_setting('header_bg_path', 'ucr_cnas_1');

        if (!empty($image)) {
            $file = File::load($image[0]);
            $file->status = FILE_STATUS_PERMANENT;
            $file->save();
            $file_usage = \Drupal::service('file.usage');
            $file_usage_check = $file_usage->listUsage($file);
            if (empty($file_usage_check)) {
                $file_usage->add($file, 'ucr_cnas_1', 'theme', $image[0]);
            }
        }

        //footer
        $footer_image = theme_get_setting('footer_bg_path', 'ucr_cnas_1');

        if (!empty($footer_image)) {
            $file = File::load($footer_image[0]);
            $file->status = FILE_STATUS_PERMANENT;
            $file->save();
            $file_usage = \Drupal::service('file.usage');
            $file_usage_check = $file_usage->listUsage($file);
            if (empty($file_usage_check)) {
                $file_usage->add($file, 'ucr_cnas_1', 'theme', $footer_image[0]);
            }
        }
    }

}
