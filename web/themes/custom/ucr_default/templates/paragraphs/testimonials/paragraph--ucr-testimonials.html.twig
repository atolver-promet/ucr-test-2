{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set testimonial_color = "" %}
{% set set_cache = content.field_testimonial_picture_style|render %}
{% set set_cache = content.field_testimonial_font_color|render %}
{% set media_image = content.media_object.url %}
{% set media_display = content.field_testimonial_picture_style|field_raw('value') %}
{% set author_title = content.field_title|field_raw('value') %}
{% if media_display == "cover" and media_image is not empty %}
    {% set cover_media %} style="background: url('{{ media_image }}'); background-size: cover;"{% endset %}
    {% set media_space %}
    <div class="media-object-section align-self-middle show-for-medium">
        <div class="testimonial-author-image testimonial-spacer"></div>
    </div>
    {% endset %}
    {% set testimonial_color = 'testimonial-font-' ~ ((content.field_testimonial_font_color|field_raw('value') is not empty) ? content.field_testimonial_font_color|field_raw('value') : 'light') %}
{% elseif media_display == "circle" and media_image is not empty %}
    {% set media_space %}
    <div class="media-object-section align-self-middle show-for-medium">
        <div class="testimonial-author-image">
            <img src="{{ content.media_object.url }}" alt="{{ content.media_object.alt }}" title="{{ content.media_object.title }}" />
        </div>
    </div>
    {% endset %}
{% endif %}
{% set testimonial_align = (content.field_testimonial_text_orient|field_raw('value') is not empty) ? content.field_testimonial_text_orient|field_raw('value') : 'right' %}
{%
    set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    'media-object',
    'stack-for-small',
    'testimonial-item',
    testimonial_color,
]
%}
{% block paragraph %}
    {% block content %}
        <div{{ attributes.addClass(classes) }}{{ cover_media }}>
            {% if testimonial_align == "right" %}{{ media_space }}{% endif %}
            <div class="media-object-section main-section">
                <div class="testimonial-main-section">
                    <div class="testimonial-content">
                        <blockqoute>{{ content.field_testimonial_body|field_value }}</blockqoute>
                    </div>
                    <div class="testimonial-author">
                        {{ content.field_author_name|field_value }}
                    </div>
                    {% if author_title is not empty %}
                    <div class="testimonial-author-title">
                        {{ content.field_title|field_value }}
                    </div>
                    {% endif %}
                </div>
            </div>
            {% if testimonial_align == "left" %}{{ media_space }}{% endif %}
        </div>
    {% endblock %}
{% endblock paragraph %}
