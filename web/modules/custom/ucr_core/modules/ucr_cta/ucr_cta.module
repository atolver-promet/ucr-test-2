<?php

/**
 * @file
 * Contains landing page functionality for Lightning.
 */

use Drupal\field\FieldConfigInterface;
use Drupal\node\Entity\NodeType;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function ucr_cta_field_config_insert(FieldConfigInterface $field) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }
}

/**
 * Implements hook_modules_installed().
 */
function ucr_cta_modules_installed(array $modules) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }
}

function ucr_cta_preprocess_paragraph__cta_item(&$variables) {
    if(array_key_exists(0, $variables['elements']['field_cta_open_modal'])) { // The user checked that the modal should be opened in a new window.
        $return_html = "";
        $cta_url = $variables['paragraph']->field_cta_url[0]->uri; // Grab the raw URL.
        if(!empty($cta_url)) {
            // Set the Default Return of the variable since it isn't empty.
            $return_html = '<div class="responsive-embed"><iframe width="100%" height="100%" src="' . $cta_url . '" frameborder="0" allowfullscreen></iframe></div>';
            $host_name = parse_url($cta_url,  PHP_URL_HOST);
            if(!empty($host_name)) {
                $check_for_video = false;

                // First check to see if the URL is an image. If it is, wrap it correctly.
                $file_headers = get_headers($cta_url, 1);
                if(isset($file_headers['Content-Type'])) {
                    $header_to_check = (is_array($file_headers['Content-Type']) ? $file_headers['Content-Type'][(count($file_headers['Content-Type']) - 1)] : $file_headers['Content-Type']);
                    if(strpos($header_to_check, 'image/') === FALSE) {
                        $check_for_video = true;
                    } else { // Final Check is valid and it is an image. Display it!
                        $return_html = '<div><img src="'.$cta_url.'" width="100%" height="100%" alt="" title="" /></div>';
                    }
                } else {
                    $check_for_video = true;
                }
                // Else, check to see if the URL is a video. If it is, wrap it correctly.
                if($check_for_video) {
                    // If the host name matches one of the video hosting sites here, then go ahead and process it.
                    if(preg_match('/(?:youtube.com|youtu.be|vimeo.com|wistia.com|metacafe.com|videyard.com|brightcove.com|sproutvideo.com|vzaar.com|jwplayer.com|metacafe.com|ooyala.com|oculu.com|dailymotion.com)/', $host_name)) {
                        $video_html = "";
                        // Fist validate for YouTube. If it is YouTube, then do the iFrame Embed. Otherwise do HTML5 Video Embed.
                        if (preg_match('/(http(s)?:\/\/)?((w){3}.)?youtu(be|.be)?(\.com)?\/.+/', $cta_url)) {
                            if (preg_match('%(?:youtube(?:-nocookie)?\.com/(?:[^/]+/.+/|(?:v|e(?:mbed)?)/|.*[?&]v=)|youtu\.be/)([^"&?/ ]{11})%i', $cta_url, $match)) {
                                $video_id = $match[1];
                                $video_html = '<iframe width="100%" height="100%" src="https://www.youtube.com/embed/' . $video_id . '" frameborder="0" allowfullscreen></iframe>';
                            } else {
                                $video_html = '<iframe width="100%" height="100%" src="' . $cta_url . '" frameborder="0" allowfullscreen></iframe>';
                            }
                        } else {
                            $video_html = '<video width="100%" height="100%" controls>
<source src="' . $cta_url . '" type="video/mp4">
<source src="' . $cta_url . '" type="video/ogg">
<source src="' . $cta_url . '" type="video/webm">
</video>';
                        }

                        $return_html = '<div class="responsive-embed widescreen">'.$video_html.'</div>';
                    }
                }
            }
        }

        $variables['cta_modal_html'] = array(
            '#markup' => $return_html,
            '#allowed_tags' => ['iframe', 'video', 'source', 'div', 'img'],
        );
    }
}
